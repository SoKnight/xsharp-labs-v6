// Решить задачу, используя класс Dictionary (или класс SortedList).
// Входные данные читать из текстового файла.

// На вход программе сначала подается число участников олимпиады N.
// В каждой из следующих N строк находится результат одного из участников олимпиады в следующем формате:
//   < Фамилия > < Имя > < класс > < баллы >
// где:
//   < Фамилия > – символьная строка(не более 20 символов),
//   < Имя > – символьная строка(не более 15 символов),
//   < класс > – число от 7 до 11,
//   < баллы > – целое число набранных участником баллов.
// <Фамилия> и <Имя>, <Имя> и <класс>, а также <класс> и <баллы> разделены одним пробелом.
// Пример входной строки:
//   Семенов Егор 11 225
//
// Победителем олимпиады становится участник, набравший наибольшее количество баллов, при условии, что он набрал более 200 баллов.
// Если такое количество баллов набрали несколько участников, то все они признаются победителями при выполнении условия,
// что их доля не превышает 20% от общего числа участников.
// Победителем олимпиады не признается никто, если нет участников, набравших больше 200 баллов,
// или больше 20% от общего числа участников набрали одинаковый наибольший балл.
//
// Напишите эффективную по времени работы и по используемой памяти программу, которая будет определять фамилию и имя лучшего участника, не ставшего победителем олимпиады.
// Если таких участников несколько, т.е. если следующий за баллом победителей один и тот же балл набрали несколько человек, или, если победителей нет,
// а лучших участников несколько (в этом случае именно они являются искомыми), то выдается только количество искомых участников.
// Гарантируется, что искомые участники (участник) имеются.
//
// Программа должна выводить через пробел фамилию и имя искомого участника или их количество.
// Пример выходных данных (один искомый участник):
//   Семенов Егор
// Второй вариант выходных данных (несколько искомых участников):
//   12

namespace Lab7
{
    internal class Task5
    {
        private static readonly string FILE_NAME = "task5_participants.txt";

        public static void Run()
        {
            // --- ввод данных ---

            Console.WriteLine("Вариант 6.");
            Console.WriteLine("Задача:");
            Console.WriteLine("Решить задачу, используя класс Dictionary (или класс SortedList).");
            Console.WriteLine("Входные данные читать из текстового файла.");
            Console.WriteLine();

            // --- заполнение исходного файла вручную ---

            Console.WriteLine("Заполните файл входными данными...")
            Console.WriteLine("Формат: <Фамилия> <Имя> <Класс> <Баллы>");
            Console.WriteLine();

            if (!UserInput.AwaitManualInput(FILE_NAME))
                return;

            // --- решение задачи ---



            // --- вывод результата ---


        }
    }
}
